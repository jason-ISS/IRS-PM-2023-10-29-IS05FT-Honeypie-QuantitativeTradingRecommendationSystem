# -*- coding: utf-8 -*-
"""views.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GpI2K4r809KsLoBrbOCIqGXEqIp9qctc
"""

from google.colab import drive
drive.mount('/content/drive')
import pandas as pd

# Load the CSV file
df = pd.read_csv('/content/drive/My Drive/PRJ/allstock.csv')

df.head(30)



df['open'] = None
df['close'] = None
df['change'] = None
df['vol'] = None

df.head(30)

com0 = pd.read_csv('/content/drive/My Drive/PRJ/AAPL_raw.csv')

company_names = ['AAPL', 'MSFT', 'GOOG', 'AMZN', 'NVDA','META','TSLA', 'BRK-B', 'LLY', 'UNH','V', 'XOM', 'WMT', 'JPM', 'JNJ', 'MA','AVGO', 'TCEHY', 'PG', 'CVX', 'ORCL', 'HD','ABBV', 'MRK', 'COST', 'ADBE', 'KO','PEP', 'CSCO', 'BAC', 'BABA', 'CRM']

import pandas as pd

# Load the 'AAPL_raw.csv' file
file_path = '/content/drive/My Drive/PRJ/AAPL_raw.csv'
aapl_df = pd.read_csv(file_path)

# Step 1: Keep only the desired columns
desired_columns = ['timestamp', 'open', 'high', 'low', 'close', 'volume']
aapl_df = aapl_df[desired_columns]

# Step 2: Change the row order to start with '2018/9/6' and end with '2023/10/18'
aapl_df = aapl_df.sort_values(by='timestamp', ascending=True)

# Step 3: Add a new column 'new_column' with ascending numbers starting from 0
aapl_df['new_column'] = [i for i in range(len(aapl_df))]

# Step 4: Add a 'ts_code' column with all values set to 'AAPL'
aapl_df['ts_code'] = 'AAPL'

# Step 5: Change the name of 'timestamp' to 'trade_date' and 'volume' to 'vol'
aapl_df = aapl_df.rename(columns={'timestamp': 'trade_date', 'volume': 'vol'})

# Step 6: Reorder the columns
aapl_df = aapl_df[['new_column', 'ts_code', 'trade_date', 'open', 'high', 'low', 'close', 'vol']]

# Define the adjustable file name
output_file_name = '/content/drive/My Drive/PRJ/AAPL.csv'  # Change the file name as needed

# Step 7: Save the DataFrame to the adjustable CSV file
aapl_df.to_csv(output_file_name, index=False)

"""**Change all data name**"""

import pandas as pd

# List of company names
company_names = ['AAPL', 'MSFT', 'GOOG', 'AMZN', 'NVDA', 'META', 'TSLA', 'BRK-B', 'LLY', 'UNH',
                 'V', 'XOM', 'WMT', 'JPM', 'JNJ', 'MA', 'AVGO', 'TCEHY', 'PG', 'CVX', 'ORCL', 'HD',
                 'ABBV', 'MRK', 'COST', 'ADBE', 'KO', 'PEP', 'CSCO', 'BAC']

# Directory where the CSV files are located
csv_directory = '/content/drive/My Drive/PRJ'  # Update this with your actual directory

# Iterate over each company name
for company_name in company_names:
    # Construct the file paths
    raw_file_path = f'{csv_directory}/{company_name}_raw.csv'
    output_file_path = f'{csv_directory}/{company_name}.csv'

    # Load the CSV file
    company_df = pd.read_csv(raw_file_path)

    # Step 1: Keep only the desired columns
    desired_columns = ['timestamp', 'open', 'high', 'low', 'close', 'volume']
    company_df = company_df[desired_columns]

    # Step 2: Change the row order to start with '2018/9/6' and end with '2023/10/18'
    company_df = company_df.sort_values(by='timestamp', ascending=True)

    # Step 3: Add a new column 'new_column' with ascending numbers starting from 0
    company_df['new_column'] = [i for i in range(len(company_df))]

    # Step 4: Add a 'ts_code' column with all values set to the current company name
    company_df['ts_code'] = company_name

    # Step 5: Change the name of 'timestamp' to 'trade_date' and 'volume' to 'vol'
    company_df = company_df.rename(columns={'timestamp': 'trade_date', 'volume': 'vol'})

    # Step 6: Reorder the columns
    company_df = company_df[['new_column', 'ts_code', 'trade_date', 'open', 'high', 'low', 'close', 'vol']]

    print(f'{company_name} has completed!')

    # Step 7: Save the DataFrame to the adjusted CSV file with the current company name
    company_df.to_csv(output_file_path, index=False)

df = pd.read_csv('/content/drive/My Drive/PRJ/allstock.csv')

df['open'] = ""
df['close'] = ""
df['vol'] = ""

df.head(30)

# Load the 'AAPL.csv' file
aapl_data = pd.read_csv('/content/drive/My Drive/PRJ/AAPL.csv')

# Extract the data from the last row of 'AAPL.csv' for 'open,' 'close,' and 'vol'
aapl_open = aapl_data['open'].iloc[-1]
aapl_close = aapl_data['close'].iloc[-1]
aapl_vol = aapl_data['vol'].iloc[-1]

# Update the corresponding rows in 'df' where 'ts_code' is 'AAPL'
df.loc[df['ts_code'] == 'AAPL', ['open', 'close', 'vol']] = [aapl_open, aapl_close, aapl_vol]

# Print the updated DataFrame
print(df)

for company_name in company_names:
    # Load the CSV file for the current company
    company_data = pd.read_csv(f'{csv_directory}/{company_name}.csv')

    # Extract the 'open,' 'close,' and 'vol' values from the last row
    company_open = company_data['open'].iloc[-1]
    company_close = company_data['close'].iloc[-1]
    company_vol = company_data['vol'].iloc[-1]

    # Update the corresponding rows in 'df' where 'ts_code' matches the current company
    df.loc[df['ts_code'] == company_name, ['open', 'close', 'vol']] = [company_open, company_close, company_vol]

# Print the updated DataFrame
print(df)

df.to_csv('/content/drive/My Drive/PRJ/updated_allstock.csv', index=False)